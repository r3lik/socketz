# created by Mike Czarny
version: '3'

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.60.0.0/24

services:

  haproxy01:
    container_name: haproxy01
    hostname: haproxy01
    depends_on:
      - server01
      - server02
      - server03
    image: ${HAPROXY_IMAGE}
    networks:
      app_network:
        ipv4_address: ${HAPROXY1_IP}
        aliases:
          - frontend.socketz.gg
    ports:
      - "127.0.0.1:9000:9000"
  haproxy02:
    container_name: haproxy02
    hostname: haproxy02
    depends_on:
      - server01
      - server02
      - server03
    image: ${HAPROXY_IMAGE}
    networks:
      app_network:
        ipv4_address: ${HAPROXY2_IP}
        aliases:
          - frontend.socketz.gg
  haproxy03:
    container_name: haproxy03
    hostname: haproxy03
    depends_on:
      - server01
      - server02
      - server03
    image: ${HAPROXY_IMAGE}
    networks:
      app_network:
        ipv4_address: ${HAPROXY3_IP}
        aliases:
          - frontend.socketz.gg

  server01:
    container_name: server01
    hostname: server01
    image: ${SERVER_IMAGE}
    stdin_open: true
    tty: true
    networks:
      app_network:
        ipv4_address: ${SERVER1_IP}
  server02:
    container_name: server02
    hostname: server02
    image: ${SERVER_IMAGE}
    stdin_open: true
    tty: true
    networks:
      app_network:
        ipv4_address: ${SERVER2_IP}
  server03:
    container_name: server03
    hostname: server03
    image: ${SERVER_IMAGE}
    stdin_open: true
    tty: true
    networks:
      app_network:
        ipv4_address: ${SERVER3_IP}

  etcd01:
    container_name: etcd01
    hostname: etcd01
    image: quay.io/coreos/etcd:v3.3.10
    command: >
        etcd -name etcd01
        -advertise-client-urls http://${ETCD1_IP}:2379,http://${ETCD1_IP}:4001
        -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001
        -initial-advertise-peer-urls http://${ETCD1_IP}:2380
        -listen-peer-urls http://0.0.0.0:2380
        -initial-cluster-token etcd-cluster-1
        -initial-cluster etcd01=http://${ETCD1_IP}:2380,etcd02=http://${ETCD2_IP}:2380,etcd03=http://${ETCD3_IP}:2380
        -initial-cluster-state new
    networks:
      app_network:
        ipv4_address: ${ETCD1_IP}
        aliases:
          - etcd-cluster.socketz.gg
  etcd02:
    container_name: etcd02
    hostname: etcd02
    image: quay.io/coreos/etcd:v3.3.10
    command: >
        etcd -name etcd02
        -advertise-client-urls http://${ETCD2_IP}:2379,http://${ETCD2_IP}:4001
        -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001
        -initial-advertise-peer-urls http://${ETCD2_IP}:2380
        -listen-peer-urls http://0.0.0.0:2380
        -initial-cluster-token etcd-cluster-1
        -initial-cluster etcd01=http://${ETCD1_IP}:2380,etcd02=http://${ETCD2_IP}:2380,etcd03=http://${ETCD3_IP}:2380
        -initial-cluster-state new
    networks:
      app_network:
        ipv4_address: ${ETCD2_IP}
        aliases:
          - etcd-cluster.socketz.gg
  etcd03:
    container_name: etcd03
    hostname: etcd03
    image: quay.io/coreos/etcd:v3.3.10
    command: >
        etcd -name etcd03
        -advertise-client-urls http://${ETCD3_IP}:2379,http://${ETCD3_IP}:4001
        -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001
        -initial-advertise-peer-urls http://${ETCD3_IP}:2380
        -listen-peer-urls http://0.0.0.0:2380
        -initial-cluster-token etcd-cluster-1
        -initial-cluster etcd01=http://${ETCD1_IP}:2380,etcd02=http://${ETCD2_IP}:2380,etcd03=http://${ETCD3_IP}:2380
        -initial-cluster-state new
    networks:
      app_network:
        ipv4_address: ${ETCD3_IP}
        aliases:
          - etcd-cluster.socketz.gg

  client01:
    container_name: client01
    hostname: client01
    image: ${CLIENT_IMAGE}
    stdin_open: true
    tty: true
    depends_on:
      - server01
      - server02
      - server03
    networks:
      app_network:
        ipv4_address: ${CLIENT1_IP}
  client02:
    container_name: client02
    hostname: client02
    image: ${CLIENT_IMAGE}
    stdin_open: true
    tty: true
    depends_on:
      - server01
      - server02
      - server03
    networks:
      app_network:
        ipv4_address: ${CLIENT2_IP}
  client03:
    container_name: client03
    hostname: client03
    image: ${CLIENT_IMAGE}
    stdin_open: true
    tty: true
    depends_on:
      - server01
      - server02
      - server03
    networks:
      app_network:
        ipv4_address: ${CLIENT3_IP}
  client04:
    container_name: client04
    hostname: client04
    image: ${CLIENT_IMAGE}
    stdin_open: true
    tty: true
    depends_on:
      - server01
      - server02
      - server03
    networks:
      app_network:
        ipv4_address: ${CLIENT4_IP}
